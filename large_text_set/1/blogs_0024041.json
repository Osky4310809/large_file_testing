{"organizations": [], "uuid": "b52b30311e4417fbd10b433f5418446c0b76dd55", "thread": {"social": {"gplus": {"shares": 2}, "pinterest": {"shares": 1}, "vk": {"shares": 0}, "linkedin": {"shares": 2}, "facebook": {"likes": 131, "shares": 131, "comments": 0}, "stumbledupon": {"shares": 70}}, "site_full": "www.techspot.com", "main_image": "http://www.techspot.com/images2/downloads/topdownload/2014/05/Google-Chrome-icon.png", "site_section": "http://www.techspot.com/downloads.xml", "section_title": "TechSpot Downloads", "url": "http://www.techspot.com/downloads/4718-google-chrome-for-windows.html", "country": "US", "domain_rank": 5125, "title": "Google Chrome 56.0.2924.76", "performance_score": 1, "site": "techspot.com", "participants_count": 0, "title_full": "Google Chrome 56.0.2924.76", "spam_score": 0.0, "site_type": "blogs", "published": "2017-01-26T17:21:00.000+02:00", "replies_count": 0, "uuid": "b52b30311e4417fbd10b433f5418446c0b76dd55"}, "author": "", "url": "http://www.techspot.com/downloads/4718-google-chrome-for-windows.html", "ord_in_thread": 0, "title": "Google Chrome 56.0.2924.76", "locations": [], "entities": {"persons": [], "locations": [], "organizations": []}, "highlightText": "", "language": "english", "persons": [], "text": "4.2 201 votes \nStarting with Chrome version 55 the browser will default to a site’s HTML5 experience. An exception to this rule only applies to the top 10 websites that use Flash (and only for a year). Chrome 55 is also said to drastically reduce RAM usage by as much as 50 percent thanks to an updated JavaScript V8 engine. We also recommend checking out our Chrome optimization guide . \nSpeed \nChrome is designed to be fast in every possible way: It's quick to start up from your desktop, loads web pages in a snap, and runs complex web applications fast. Learn more about Chrome and speed. \nSimplicity \nChrome's browser window is streamlined, clean and simple. Chrome also includes features that are designed for efficiency and ease of use. For example, you can search and navigate from the same box, and arrange tabs however you wish — quickly and easily. \nSecurity \nChrome is designed to keep you safer and more secure on the web with built-in malware and phishing protection, autoupdates to make sure the browser is up-to-date with the latest security updates, and more. Learn more about Chrome's security features. \nAnd more features \nChrome has many useful features built in, including extensions, translation in the browser, themes, and more. Learn more about Chrome's newest and most-loved features. \nWhat's New: \nChrome 56.0.2924.76 contains a number of fixes and improvements -- a list of changes is available in the log. Watch out for upcoming Chrome and Chromium blog posts about new features and big efforts delivered in 56. \nReload \nReload has long been a staple feature of web browsers and kept its original behavior throughout the years, despite the changing landscape of web platform innovations, connectivity, and content consumption patterns. When reloading a page, browsers will check with the web server if cached resources are still usable, a process known as validation. This typically results in hundreds of network requests per page issued to dozens of domains. On mobile devices, the high latency and transient nature of mobile connections mean that this behavior can produce serious performance issues. In the latest version of Chrome, changes to page reload behavior produce reloads that are 28% faster and result in 60% less validation requests. Users typically reload either because a page is broken or the content seems stale. The existing reload behavior usually solves broken pages, but stale content is inefficiently addressed by a regular reload, especially on mobile. This feature was originally designed in times when broken pages were quite common, so it was reasonable to address both use cases at once. However, this original concern has now become far less relevant as the quality of web pages has increased. To improve the stale content use case, Chrome now has a simplified reload behavior to only validate the main resource and continue with a regular page load. This new behavior maximizes the reuse of cached resources and results in lower latency, power consumption, and data usage. Despite being a relatively minor change, the new behavior makes reloads up to 28% faster and consume less bandwidth and power. Furthermore, Facebook contacted us with data showing that Chrome was sending validation requests at three times the rate of other browsers. Thanks to the new reload behavior and some related changes, Facebook now reports 28% faster page reloads and 60% less validation requests from Chrome. We hope this faster reload will come in handy whenever you want to get the latest content on your favorite website or quickly recover from a flaky connection in the subway. \nSecurity Fixes and Rewards \nNote: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven’t yet fixed. \nThis update includes 51 security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the Chrome Security Page for more information. [$8837][671102] High CVE-2017-5007: Universal XSS in Blink. Credit to Mariusz Mlynski [$8000][673170] High CVE-2017-5006: Universal XSS in Blink. Credit to Mariusz Mlynski [$8000][668552] High CVE-2017-5008: Universal XSS in Blink. Credit to Mariusz Mlynski [$7500][663476] High CVE-2017-5010: Universal XSS in Blink. Credit to Mariusz Mlynski [$3000][662859] High CVE-2017-5011: Unauthorised file access in Devtools. Credit to Khalil Zhani [$3000][667504] High CVE-2017-5009: Out of bounds memory access in WebRTC. Credit to Sean Stanek and Chip Bradford [$5500][681843] High CVE-2017-5012: Heap overflow in V8. Credit to Gergely Nagy (Tresorit) [$2000][677716] Medium CVE-2017-5013: Address spoofing in Omnibox. Credit to Haosheng Wang (@gnehsoah) [$2000][675332] Medium CVE-2017-5014: Heap overflow in Skia. Credit to sweetchip [$2000][673971] Medium CVE-2017-5015: Address spoofing in Omnibox. Credit to Armin Razmdjou [$2000][666714] Medium CVE-2017-5019: Use after free in Renderer. Credit to Wadih Matar [$1000][673163] Medium CVE-2017-5016: UI spoofing in Blink. Credit to Haosheng Wang (@gnehsoah) [$500][676975] Medium CVE-2017-5017: Uninitialised memory access in webm video. Credit to danberm [$500][668665] Medium CVE-2017-5018: Universal XSS in chrome://apps. Credit to Rob Wu [$TBD][668653] Medium CVE-2017-5020: Universal XSS in chrome://downloads. Credit to Rob Wu [$N/A][663726] Low CVE-2017-5021: Use after free in Extensions. Credit to Rob Wu [$N/A][663620] Low CVE-2017-5022: Bypass of Content Security Policy in Blink. Credit to 李普君 of 无声信息技术PKAV Team [$N/A][651443] Low CVE-2017-5023: Type confusion in metrics. Credit to the UK's National Cyber Security Centre (NCSC) [$N/A][643951] Low CVE-2017-5024: Heap overflow in FFmpeg. Credit to Paul Mehta [$N/A][643950] Low CVE-2017-5025: Heap overflow in FFmpeg. Credit to Paul Mehta [$500][634108] Low CVE-2017-5026: UI spoofing. Credit to Ronni Skansing \nWe would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel. \nAs usual, our ongoing internal security work was responsible for a wide range of fixes: [685349] Various fixes from internal audits, fuzzing and other initiatives \nMany of our security bugs are detected using AddressSanitizer, MemorySanitizer, Control Flow Integrity, or libFuzzer. Apps similar to Google Chrome for Windows 11 4.5", "external_links": [], "published": "2017-01-26T17:21:00.000+02:00", "crawled": "2017-01-27T00:13:46.296+02:00", "highlightTitle": ""}