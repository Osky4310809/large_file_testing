{"organizations": [], "uuid": "5df9f52b087be527a6fae46409d43d911aa1c08a", "thread": {"social": {"gplus": {"shares": 20}, "pinterest": {"shares": 1}, "vk": {"shares": 2}, "linkedin": {"shares": 12}, "facebook": {"likes": 201, "shares": 201, "comments": 0}, "stumbledupon": {"shares": 0}}, "site_full": "blog.jetbrains.com", "main_image": "https://d3nmt5vlzunoa1.cloudfront.net/kotlin/files/2017/03/GitHub-Stats-2.png", "site_section": "", "section_title": "", "url": "https://blog.jetbrains.com/kotlin/2017/03/kotlin-1-1/", "country": "US", "domain_rank": 2122, "title": "Kotlin 1.1 Released with JavaScript Support, Coroutines and more | Kotlin Blog", "performance_score": 2, "site": "jetbrains.com", "participants_count": 0, "title_full": "Kotlin 1.1 Released with JavaScript Support, Coroutines and more | Kotlin Blog", "spam_score": 0.026, "site_type": "blogs", "published": "2017-03-01T20:41:00.000+02:00", "replies_count": 0, "uuid": "5df9f52b087be527a6fae46409d43d911aa1c08a"}, "author": "Roman Belov", "url": "https://blog.jetbrains.com/kotlin/2017/03/kotlin-1-1/", "ord_in_thread": 0, "title": "Kotlin 1.1 Released with JavaScript Support, Coroutines and more | Kotlin Blog", "locations": [], "entities": {"persons": [{"name": "coroutines", "sentiment": "negative"}, {"name": "société générale", "sentiment": "none"}, {"name": "kotlin", "sentiment": "none"}, {"name": "corda", "sentiment": "none"}], "locations": [{"name": "coursera", "sentiment": "none"}, {"name": "github", "sentiment": "none"}, {"name": "square", "sentiment": "none"}, {"name": "pinterest", "sentiment": "none"}, {"name": "kotlin", "sentiment": "none"}, {"name": "jetbrains", "sentiment": "none"}], "organizations": [{"name": "goldman sachs", "sentiment": "none"}, {"name": "bnp paribas", "sentiment": "none"}, {"name": "kotlin standard library", "sentiment": "none"}, {"name": "oss", "sentiment": "none"}, {"name": "deutsche bank", "sentiment": "none"}, {"name": "wells fargo", "sentiment": "none"}, {"name": "amazon web services", "sentiment": "none"}, {"name": "hsbc", "sentiment": "none"}, {"name": "ubs", "sentiment": "none"}, {"name": "netflix", "sentiment": "none"}, {"name": "j.p. morgan", "sentiment": "none"}, {"name": "jpa", "sentiment": "none"}]}, "highlightText": "", "language": "english", "persons": [], "text": "// launches new coroutine in UI context launch ( UI ) { // wait for async overlay to complete val image = asyncOverlay ( ) . await ( ) // and then show it in UI showImage ( image ) } \nRead more in our docs . \nAn important note . With all the benefits that they bring, Kotlin coroutines are a fairly new design that needs extensive battle-testing before we can be sure it’s 100% right and complete. This is why we will release it under an “experimental” opt-in flag . We do not expect the language rules to change, but APIs may require some adjustments in Kotlin 1.2. JavaScript support \nAs mentioned above, all language features in Kotlin 1.1, including coroutines, work on both JVM/Android and JavaScript. (Reflection for JavaScript is not available, but we’re looking into it.) This means that a web application can be written entirely in Kotlin, and we already have some experience doing that inside JetBrains. We will publish tutorials and other materials about this soon. \nKotlin for JavaScript has dynamic types to interoperate with “native” JavaScript code. To use well-known libraries through typed APIs, you can use the ts2kt converter together with headers from DefinitelyTyped . \nWe support both Node.js and the browser. The Kotlin Standard Library is available for use through npm . \nRead more in our docs . Tooling \nKotlin 1.1 is not a major release for Kotlin tooling: we prefer shipping tooling features that do not affect the language itself as soon as they are ready, so you’ve seen many such improvements in Kotlin 1.0.x versions. To highlight a few: Kotlin plugins for all the major IDEs: IntelliJ IDEA, Android Studio, Eclipse and NetBeans Incremental compilation in both IntelliJ IDEA and Gradle Compiler plugins for Spring, JPA and Mockito (making classses open and generating no-arg constructors) kapt for annotation processing Lint support for Android projects Numerous IDE intentions, inspections, quick fixes, refactorings and code completion improvements \nWe’ll keep working to make our tooling even better and deliver the updates in 1.1.x versions. First year of Kotlin: Adoption and Community \nIn short, Kotlin is growing. We’ve seen over 160’000 people using it during the last year. OSS projects on Github grew from 2.4M to 10M lines of Kotlin code (about 4x). Our Slack community has grown from 1’400 to over 5’700 people (over 4x). Numerous meet-ups and user groups are organized by the community around the world . We are seeing more and more Kotlin books and online courses published. \nKotlin is equally strong with server-side and Android developers (roughly 50/50 divide). Spring Framework 5.0 has introduced Kotlin support , so did vert.x 3.4 . Gradle and TeamCity are using Kotlin for build scripts. More projects using Kotlin can be found at kotlin.link . \nMany well-known companies are using Kotlin: Amazon Web Services , Pinterest , Coursera , Netflix , Uber , Square , Trello , Basecamp , amongst others. Corda , a distributed ledger developed by a consortium of well-known banks (such as Goldman Sachs, Wells Fargo, J.P. Morgan, Deutsche Bank, UBS, HSBC, BNP Paribas, Société Générale), has over 90% Kotlin in its codebase. \nWe are grateful to all our users, contributors and advocates in all parts of the world. Your support is very important to us! Organize your own Kotlin 1.1 Event \nKotlin 1.1 is a good reason to meet up with your local user group and friends. We have prepared some materials to help you organize such an event. On March 23 we’ll stream live sessions featuring the Kotlin team members, plus there’s an organizers pack that includes some swag and a Future Features Survey. Get more info and register your event here . What’s next \nTo make Kotlin a truly full-stack language, we are going to provide tooling and language support for compiling the same code for multiple platforms. This will facilitate sharing modules between client and server. We will keep working on improving the JavaScript tooling and library support. Among other things, incremental compilation for the JavaScript platform is in the works already. Stay tuned for 1.1.x updates. \nJava 9 is coming soon, and we will provide support for its new features before it ships. \nWe expect a lot of feedback on coroutines in the upcoming months, and improving this area of the language (in terms of both performance and functionality) is among our priorities. \nApart from this, our next release will be mostly focused on maintenance, performance improvements, infrastructure and bugfixing. \nP.S. Running on multiple platforms is a strategic direction for Kotlin. With 1.1 we can run on servers, desktops, Android devices and browsers, but in the future we are going to compile Kotlin to native code and run on many more platforms (including, for example, iOS and embedded devices). A great team here at JetBrains is working on this project, and we are expecting to show something interesting fairly soon. This does not target any particular release yet, though. Installation instructions \nAs always, you can try Kotlin online at try.kotlinlang.org . \nIn Maven/Gradle : Use 1.1.0 as the version number for the compiler and the standard library. See the docs here . \nIn IntelliJ IDEA : 2017.1 has Kotlin 1.1 bundled, in earlier versions Install or update the Kotlin plugin to version 1.1. \nIn Android Studio : Install or update the plugin through Plugin Manager . \nIn Eclipse : install the plugin using Marketplace . \nThe command-line compiler can be downloaded from the Github release page . \nCompatibility . In Kotlin 1.1 the language and the standard library are backwards compatible (modulo bugs) : if something compiled and ran in 1.0, it will keep working in 1.1. To aid big teams that update gradually, we provide a compiler switch that disables new features. Here is a document covering possible pitfalls. \nHave a nice Kotlin! ", "external_links": [], "published": "2017-03-01T20:41:00.000+02:00", "crawled": "2017-03-01T16:41:39.147+02:00", "highlightTitle": ""}