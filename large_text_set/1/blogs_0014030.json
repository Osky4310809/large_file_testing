{"organizations": [], "uuid": "4fd43e0ec7eb041535b39f752191ef6e53b9e2b3", "thread": {"social": {"gplus": {"shares": 20}, "pinterest": {"shares": 3}, "vk": {"shares": 0}, "linkedin": {"shares": 86}, "facebook": {"likes": 612, "shares": 612, "comments": 0}, "stumbledupon": {"shares": 0}}, "site_full": "www.bbc.co.uk", "main_image": "http://ichef-1.bbci.co.uk/news/1024/cpsprodpb/7D8B/production/_92693123_jwedsac.jpg", "site_section": "http://newsrss.bbc.co.uk/rss/newsonline_uk_edition/front_page/rss.xml", "section_title": "BBC News - Home", "url": "http://www.bbc.co.uk/news/technology-38103893", "country": "GB", "domain_rank": 108, "title": "Coding pioneer", "performance_score": 6, "site": "bbc.co.uk", "participants_count": 0, "title_full": "Coding pioneer", "spam_score": 0.0, "site_type": "blogs", "published": "2017-01-15T07:08:00.000+02:00", "replies_count": 0, "uuid": "4fd43e0ec7eb041535b39f752191ef6e53b9e2b3"}, "author": "", "url": "http://www.bbc.co.uk/news/technology-38103893", "ord_in_thread": 0, "title": "Coding pioneer", "locations": [], "entities": {"persons": [{"name": "edsac", "sentiment": "none"}, {"name": "fred hoyle", "sentiment": "none"}, {"name": "david wheeler", "sentiment": "none"}, {"name": "wheeler", "sentiment": "none"}, {"name": "joyce wheeler", "sentiment": "none"}, {"name": "maurice wilkes", "sentiment": "none"}, {"name": "stanley gill", "sentiment": "none"}, {"name": "john robertson", "sentiment": "none"}, {"name": "nee blackler", "sentiment": "none"}, {"name": "blackler", "sentiment": "none"}], "locations": [{"name": "edsac", "sentiment": "none"}, {"name": "cambridge", "sentiment": "none"}], "organizations": [{"name": "edsac", "sentiment": "none"}, {"name": "getty images image", "sentiment": "none"}, {"name": "gr harvey image", "sentiment": "none"}, {"name": "university of cambridge", "sentiment": "none"}, {"name": "national museum of computing", "sentiment": "none"}]}, "highlightText": "", "language": "english", "persons": [], "text": "Programming in the early days of the computer age 15 January 2017 Close share panel Image copyright GR Holder Image caption Joyce Wheeler was one of a select group of scientists who used Edsac in their research Everyone remembers the first computer they ever used. And Joyce Wheeler is no exception. But in her case the situation was a bit different. The first computer she used was one of the first computers anyone used. \nThe machine was Edsac - the Electronic Delay Storage Automatic Calculator - that ran for the first time in 1949 and was built to serve scientists at the University of Cambridge. \nJoyce Wheeler was one of those scientists who, at the time, was working on her PhD under the supervision of renowned astronomer Fred Hoyle. \n\"My work was about the reactions inside stars,\" she said. \"I was particularly interested in how long main sequence stars stay on their main sequence. \n\"I wanted to know how long a star took to fade out,\" she explained. \nThe inner workings of the nuclear furnace that keep stars shining is an understandably knotty problem to solve. And, she said, the maths describing that energetic process were formidable. \n\"For stars, there's a rather nasty set of differential equations that describe their behaviour and composition,\" she added. Image copyright Getty Images Image caption Edsac helped Dr Wheeler investigate what processes keep stars burning \nCompleting those calculations manually was futile. \n\"It was not possible to be really accurate doing it by hand,\" she said. \"The errors just build up too much.\" \nEnter Edsac - a machine created by Prof Maurice Wilkes to do exactly the kind of calculations Ms Wheeler (nee Blackler) needed done to complete her advanced degree. Thinking time \nFirst though, she had to learn to write the programs that would carry out the calculations. \nDr Wheeler started her PhD work at Cambridge in 1954 knowing about Edsac thanks to an earlier visit during which the machine had been shown off to her and others. \nKeen to get on with her research she sat down with the slim booklet that described how to program it and, by working through the exercises in that pioneering programming manual, learned to code. Image copyright GR Harvey Image caption Research students like Joyce Wheeler had to use Edsac at night \nThe little book was called WWG after its three authors Maurice Wilkes, David Wheeler and Stanley Gill. \nIt was through learning programming that Ms Blackler got talking to David Wheeler because one of her programs helped to ensure Edsac was working well. They got to know each other, fell in love and married in 1957. \nNow, more than 62 years on she is very matter of fact about that time - even though programmers, and especially women programmers, were rare. \nPerhaps because of that novel situation, a new discipline and a pioneering machine, the atmosphere at Cambridge in the computer lab was not overwhelmingly masculine. \n\"You could be regarded as a bit of an object, and occasionally it was a bit uncomfortable,\" she said, \"But it was not quite a boys' brigade then in the way that it became later on.\" \nIt was an exciting time, she said, because of what the machine could do for her and her work. She took to programming quickly, she said, her strength with maths helping her quickly master the syntax into which she had to translate those \"nasty equations\". \n\"But it was like maths,\" she said, \"it was one of those things that you knew you should not do for too long. Image copyright maciek905 Image caption The foundations of programming were laid down by Edsac's creators \n\"I found I could not work at a certain programming job for more than a certain number of hours per day,\" she said. \"After that you would not make much progress.\" \nOften, she said, the solution to a programming problem she had been worrying away at would strike while she was engaged in something more mundane, like doing the washing or eating lunch. \n\"Sometimes it's better to leave something alone, to pause, and that's very true of programming.\" Night work \nWith the programming done, she could let Edsac do the number crunching. As a research student she had to run her programs during the night. In her case that was Friday. \n\"That was good because there were no lectures the next day that you had to go to,\" she said. \nAs an operator she was allowed to run Edsac alone, provided she signed in and kept a record of what she did. \n\"Quite often it would break down during the night, but just occasionally you were lucky enough to keep it running all night,\" she said. \"If it did crash, there was little that operators were allowed to do to try to fix it. \n\"They didn't even let any of the cleaners get near it,\" she said. \nDr Wheeler had been shown one procedure that recalibrated Edsac's two kilobyte memory but if that did not help, then her work would stop for the night. \nDespite the regular crashes, Ms Wheeler made steady progress on finding out how long different stars would last before they collapsed. Image copyright John Robertson Image caption A coy of Edsac is being built at the National Museum of Computing \n\"I got some estimates of a star's age, how long it was going to last,\" she said. \"One of the nice things was that with programming you could repeat it. Iterate. You could not do that with a hand calculation. \n\"We could add in sample numbers on programs and it could easily check them,\" she added. \"I could check my results on the machine very rapidly, which was very useful.\" \nRapidly in the 1950s meant about 30 minutes for the machine to complete one run of a program. Then the results were printed out for researchers to pore over to see what results they had got. Then it was a case of re-programming and perhaps waiting a few days to have a chance to run a slightly modified program on Edsac. \nDespite the delays, it was clear to Dr Wheeler that they were pioneers. \n\"We were doing work that could not done in any other way,\" she said. And even though Edsac was crude and painfully slow by modern standards, she saw that a revolution had begun. \n\"It was clear that one day, when the machines got bigger and faster, a lot of problems would start to be solved.\" Related Topics", "external_links": [], "published": "2017-01-15T07:08:00.000+02:00", "crawled": "2017-01-15T02:38:18.300+02:00", "highlightTitle": ""}