{"organizations": [], "uuid": "19648bc15846166bc9325063e3ab0165dc5926b9", "thread": {"social": {"gplus": {"shares": 10}, "pinterest": {"shares": 3}, "vk": {"shares": 0}, "linkedin": {"shares": 28}, "facebook": {"likes": 122, "shares": 122, "comments": 0}, "stumbledupon": {"shares": 0}}, "site_full": "www.zdnet.com", "main_image": "http://zdnet2.cbsistatic.com/hub/i/r/2017/02/23/b6418b99-c0d8-4554-a869-9f69f1599f16/thumbnail/770x578/76b3e35385bf2ae8e81ab9932359a2bb/macsymantec.jpg", "site_section": "", "section_title": "", "url": "http://www.zdnet.com/article/cybercriminals-start-cashing-in-on-vulnerable-wordpress-websites/", "country": "US", "domain_rank": 1869, "title": "Cybercriminals start cashing in on vulnerable WordPress websites | ZDNet", "performance_score": 1, "site": "zdnet.com", "participants_count": 0, "title_full": "Cybercriminals start cashing in on vulnerable WordPress websites | ZDNet", "spam_score": 0.265, "site_type": "blogs", "published": "2017-02-23T21:48:00.000+02:00", "replies_count": 0, "uuid": "19648bc15846166bc9325063e3ab0165dc5926b9"}, "author": "Charlie Osborne", "url": "http://www.zdnet.com/article/cybercriminals-start-cashing-in-on-vulnerable-wordpress-websites/", "ord_in_thread": 0, "title": "Cybercriminals start cashing in on vulnerable WordPress websites | ZDNet", "locations": [], "entities": {"persons": [], "locations": [], "organizations": []}, "highlightText": "", "language": "english", "persons": [], "text": "Cybercriminals start cashing in on vulnerable WordPress websites Domains are being compromised through a vulnerability in the WordPress REST API. | Topic: Security \nThe abuse of a vulnerability in the WordPress REST API has taken an expected turn -- with the monetization of compromised websites for cyberattackers. \nThe security flaw is a patched vulnerability in the content management system (CMS)'s REST API which permits attackers to modify the content of posts or pages, including editing or outright deletion, and can even allow them to execute malicious code. \nDespite the bug being fixed earlier this year , thousands of webmasters are ignoring pleas to update, granting criminals a vast array of websites to exploit. \nTwo weeks after the patch update was issued by the WordPress security team, researchers found exploits being shared online to take advantage of slack security, leading to a minimum of 66,000 WordPress domains compromised to carry SEO spam (Search Engine Poisoning) and make cyberattackers money through spam-related content. \nA number of websites were also the targets of remote code execution attempts. \nIt is estimated that up to 1.5 million websites may remain unpatched. However, the situation appears to have worsened. \nAccording to researchers from SiteLock , the latest trend in vulnerable WordPress website defacement is the launch of rogue pharmacies. These websites, rather common already online, promise to provide \"authentic\" erectile dysfunction medication. SiteLock \nShould a visitor fall for this trick and attempt to purchase the 'medication,\" much of the time, the cyberattackers will store their credit card data and run -- potentially leading to unauthorized purchases or rinsed bank accounts. \nIn an interesting example of attacker tug-of-war, one fake pharmacy was involved in a battle against other criminals utilizing the same flaw to push other defacements onto the website's content and posts, such as political messages or fights for exposure. \nSiteLock estimates that roughly 20 attackers are defacing these websites, fighting amongst themselves for financial gain. \n\"The ease of execution is so low and so easy, we're seeing script kiddies pick up this exploit and have a field day with it,\" said Logan Kipp of SiteLock. \"We're seeing these 20 or so different actors fighting over control and overwriting defacements, many times minutes apart.\" \nTo protect domains against this vulnerability, websites must update to WordPress 4.7.2. ", "external_links": [], "published": "2017-02-23T21:48:00.000+02:00", "crawled": "2017-02-23T17:19:25.814+02:00", "highlightTitle": ""}