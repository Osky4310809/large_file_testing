{"organizations": [], "uuid": "554e045c328e6980ad39e4c1f8d59cbd10e8dffd", "thread": {"social": {"gplus": {"shares": 3}, "pinterest": {"shares": 0}, "vk": {"shares": 0}, "linkedin": {"shares": 253}, "facebook": {"likes": 155, "shares": 155, "comments": 0}, "stumbledupon": {"shares": 0}}, "site_full": "azure.microsoft.com", "main_image": "https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/aa763fbc-7c18-4e53-8a9c-3bc693434b98.png", "site_section": "http://azure.microsoft.com/blog/feed/", "section_title": "Microsoft Azure Blog", "url": "https://azure.microsoft.com/en-us/blog/dear-mongodb-users-we-welcome-you-in-azure-documentdb/", "country": "US", "title": "Dear #MongoDB users, we welcome you in #Azure #DocumentDB", "performance_score": 1, "site": "microsoft.com", "participants_count": 1, "title_full": "Dear #MongoDB users, we welcome you in #Azure #DocumentDB", "spam_score": 0.0, "site_type": "blogs", "published": "2017-02-16T15:00:00.000+02:00", "replies_count": 0, "uuid": "554e045c328e6980ad39e4c1f8d59cbd10e8dffd"}, "author": "Rimma Nehme", "url": "https://azure.microsoft.com/en-us/blog/dear-mongodb-users-we-welcome-you-in-azure-documentdb/", "ord_in_thread": 0, "title": "Dear #MongoDB users, we welcome you in #Azure #DocumentDB", "locations": [], "entities": {"persons": [{"name": "mongo", "sentiment": "none"}, {"name": "python", "sentiment": "none"}], "locations": [{"name": "australia", "sentiment": "none"}, {"name": "germany", "sentiment": "none"}, {"name": "java", "sentiment": "none"}, {"name": "china", "sentiment": "none"}], "organizations": [{"name": "power bi", "sentiment": "none"}, {"name": "azure security center", "sentiment": "none"}, {"name": "microsoft", "sentiment": "none"}, {"name": "azure stream analytics", "sentiment": "none"}]}, "highlightText": "", "language": "english", "persons": [], "text": "Dear #MongoDB users, we welcome you in #Azure #DocumentDB \n  Rimma Nehme Architect, Open Source Software Analytics + NoSQL group First and foremost, security is our priority \nMicrosoft makes security a priority at every step, from code development to incident response. Azure code development adheres to Microsoft’s Security Development Lifecycle (SDL) - a software development process that helps developers build more secure software and address security compliance requirements while reducing development cost. Azure Security Center makes Azure the only public cloud platform to offer continuous security-health monitoring. Azure is ubiquitous, with a global footprint approaching nearly 40 geographical regions and continuously expanding. With its worldwide presence, one of the differentiated capabilities Azure offers is the ability to easily build, deploy, and manage globally distributed data-driven applications that are secure. \nAzure DocumentDB is Microsoft's multi-tenant, globally distributed database system designed to enable developers to build planet scale applications. DocumentDB allows you to elastically scale both throughput and storage across any number of geographical regions. The service offers guaranteed low latency at P99 - 99.99% high availability, predictable throughput, and multiple well-defined consistency models – all backed by comprehensive enterprise-level SLAs. By virtue of its schema-agnostic and write optimized database engine , by default DocumentDB is capable of automatically indexing all the data it ingests and serve SQL , MongoDB , and JavaScript language-integrated queries in a scale-independent manner. \nDocumentDB has a number of powerful security features built-in. To secure data stored in an Azure DocumentDB database account, DocumentDB provides support for a secret-based authorization model that utilizes a strong hash-based message authentication code (HMAC). In addition to the secret based authorization model, DocumentDB also supports policy driven IP-based access controls for inbound firewall support. This model is very similar to the firewall rules of a traditional database system and provides an additional level of security to the DocumentDB database account. With this model, you can now configure a DocumentDB database account to be accessible only from an approved set of machines and/or cloud services . Once this configuration is applied, all requests originating from machines outside this allowed list will be blocked by the server. Access to DocumentDB resources from these approved sets of machines and services still require the caller to present a valid authorization token . All communication inside the cluster in DocumentDB (e.g., replication traffic) is using SSL. All communication from Mongo (or any other clients) to DocumentDB service is always using SSL.To learn more about securing access to your data in DocumentDB, see Securing Access to DocumentDB Data . \nThe table below maps current DocumentDB features to the security checklist that MongoDB recommends . \nChecklist Item \nEnable Access Control and Enforce Authentication \nEnabled by default \nOnly discovery/authentication commands like IsMaster/GetLastError/WhatsMyUri are supported before authentication \nConfigure Role-Based Access Control \nEach DatabaseAccount has its own key. \nSupport for ReadOnly keys to limit access. \nNo default user/account present. \nWe do not allow non-SSL communication – all communication to service is always over SSL. \nDocumentDB requires TLS1.2 which is more secure than TLS1, SSL3 \nEncrypt and Protect Data \nIP Filtering \nAudit System Activity \nWe audit all APIs and all system activities, and plan to expose it to customers using Portal shortly (today we already expose it to customers when they ask for it). \nRun MongoDB with a Dedicated User \nDocumentDB is a multi-tenant service so no account has direct access to the core operating system resources. \nRun MongoDB with Secure Configuration Options \nDocumentDB only support MongoDB wire protocol and does not enable HTTP/JSONP endpoints \nThe capabilities offered by DocumentDB span beyond that of traditional geographical disaster recovery (Geo-DR) offered by \"single-site\" databases. Single site databases offering Geo-DR capability are a strict subset of globally distributed databases. With DocumentDB's turnkey global distribution , developers do not have to build their own replication scaffolding by employing either the Lambda pattern (for example, AWS DynamoDB replication ) over the database log or by doing \"double writes\" across multiple regions. We do not recommend these approaches since it is impossible to ensure correctness of such approaches and provide sound SLAs. \nDocumentDB enables you to have policy-based geo-fencing capabilities . Geo-fencing is an important capability that ensures data governance and compliance restrictions and may prevent associating a specific region with your account. Examples of geo-fencing include (but are not restricted to), scoping global distribution to the regions within a sovereign cloud (for example, China and Germany), or within a government taxation boundary (for example, Australia). The policies are controlled using the metadata of your Azure subscription. \nFor failover, you can specify an exact sequence of regional failovers if there is a multi-regional outage and you can associate the priority to various regions associated with the database account. DocumentDB will ensure that the automatic failover sequence occurs in the priority order you specified. \nWe are also working on encryption-at-rest and in-motion . Customers will be able to encrypt data in DocumentDB to align with best practices for protecting confidentiality and data integrity. Stay tuned for that. Second, you don’t have to rewrite your Apps \nMoving to DocumentDB doesn’t require you to rewrite your apps or throw away your existing tools. DocumentDB supports protocol for MongoDB , which means DocumentDB databases can now be used as the data store for apps written for MongoDB. This also means that by using existing drivers for MongoDB databases, your applications written for MongoDB can now communicate with DocumentDB and use DocumentDB databases instead of MongoDB databases. In many cases, you can switch from using MongoDB to DocumentDB by simply changing a connection string . Using this functionality, you can easily build and run MongoDB database applications in the Azure cloud - leveraging DocumentDB's fully managed and scalable NoSQL databases, while continuing to use familiar skills and tools for MongoDB. Furthermore, we only support SSL for Mongo (not http) for the benefit of all users. Other benefits that you can get right away (that you can’t get anywhere else) include: No Server Management - DocumentDB is a fully managed service, which means you do not have to manage any infrastructure or Virtual Machines yourself. And DocumentDB is available in all Azure Regions , so your data will be available globally instantly. Limitless Scale - You can scale throughput and storage independently and elastically. You can add capacity to serve millions of requests per second with ease. Enterprise grade - DocumentDB supports multiple local replicas to deliver 99.99% availability and data protection in the face of both local and regional failures. You automatically get enterprise grade compliance certifications and security features. MongoDB Compatibility - DocumentDB protocol support for MongoDB is designed for compability with MongoDB. You can use your existing code, applications, drivers, and tools to work with DocumentDB. Third, we do it with love… \nModern developers rely on dozens of different technologies to build apps, and that number is constantly expanding. These apps are often mission-critical and demand the best tools and technologies, regardless of vendor. That’s why we work so hard to find elegant, creative and simple ways to enable our customers build any app, using any model, with any language (e.g., Node.js, Java, Python, JavaScript, .NET, .NET core, SQL ) against DocumentDB. And that’s why there are thousands of apps built on top of DocumentDB for everything from IoT, advertising, marketing, e-commerce, customer support, games, to power grid surveillance . We are deeply committed to making your experience on DocumentDB simply stellar! We offer a platform that brings everything together into one to simplify the process of building distributed apps at planet scale . We agonize over the best way to give developers the best experience, making sure our service works together seamlessly with all other services in Azure like Azure Search, Azure Stream Analytics, Power BI, Azure HDInsight and more. We strive for nearly instantaneous, yet thoughtful, human responses to each inquiry about DocumentDB that you post online. For us, this is not going above and beyond, it’s how we do it. This is who we are. Welcome to real planet-scale NoSQL revolution! \nWe’re thrilled you’re going to be helping us define our NoSQL product (which capabilities to add, which APIs to support, and how to integrate with other products and services) to make our service even better. DocumentDB powers the businesses of banking and capital markets , professional services and discrete manufacturers , startups and health solutions . It is used everywhere in the world, and we’re just getting started. We’ve created something that both customers and developers really love and something we are really proud of! The revolution that is leading thousands of developers to flock to Azure DocumentDB has just started, and it is driven by something much deeper than just our product features. Building a product that allows for significant improvements in how developers build modern applications requires a degree of thoughtfulness, craftsmanship and empathy towards developers and what they are going through. We understand that, because we ourselves are developers. \nWe want to enable developers to truly transform the world we are living in through the apps they are building, which is even more important than the individual features we are putting into DocumentDB . Developing applications is hard, developing distributed applications at planet scale that are fast, scalable, elastic, always available and yet simple - is even harder. Yet it is a fundamental pre-requisite in reaching people globally in our modern world. We spend limitless hours talking to customers every day and adapting DocumentDB to make the experience truly stellar and fluid. The agility, performance and cost-effectiveness of apps built on top of DocumentDB is not an accident. Even tiny details make big differences. \nSo what are the next steps you should take? Here are a few that come to mind: Then, follow the Connect to a DocumentDB account with protocol support for MongoDB tutorial to learn how to get your account connection string information. Afterwards, take a look at the Use MongoChef with a DocumentDB account with protocol support for MongoDB tutorial to learn how to create a connection between your DocumentDB database and MongoDB app in MongoChef. When you feel inspired (and you will be!), explore DocumentDB with protocol support for MongoDB samples . \nSincerely,", "external_links": [], "published": "2017-02-16T15:00:00.000+02:00", "crawled": "2017-02-17T01:29:16.491+02:00", "highlightTitle": ""}