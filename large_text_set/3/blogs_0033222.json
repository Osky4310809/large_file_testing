{"organizations": [], "uuid": "79923222a5d2bba5c0a86046245c863150ed0b1f", "thread": {"social": {"gplus": {"shares": 59}, "pinterest": {"shares": 15}, "vk": {"shares": 2}, "linkedin": {"shares": 159}, "facebook": {"likes": 468, "shares": 468, "comments": 0}, "stumbledupon": {"shares": 21}}, "site_full": "blog.teamtreehouse.com", "main_image": "http://blog.teamtreehouse.com/wp-content/uploads/2012/09/frontend-backend.jpg", "site_section": "http://blog.teamtreehouse.com/comments/feed", "section_title": "Comments for Treehouse Blog", "url": "http://blog.teamtreehouse.com/i-dont-speak-your-language-frontend-vs-backend", "country": "US", "domain_rank": 3967, "title": "Comment on I Don’t Speak Your Language: Frontend vs. Backend by steve", "performance_score": 4, "site": "teamtreehouse.com", "participants_count": 1, "title_full": "Comment on I Don’t Speak Your Language: Frontend vs. Backend by steve", "spam_score": 0.0, "site_type": "blogs", "published": "2017-03-31T07:26:00.000+03:00", "replies_count": 0, "uuid": "79923222a5d2bba5c0a86046245c863150ed0b1f"}, "author": "steve", "url": "http://blog.teamtreehouse.com/i-dont-speak-your-language-frontend-vs-backend", "ord_in_thread": 0, "title": "Comment on I Don’t Speak Your Language: Frontend vs. Backend by steve", "locations": [], "entities": {"persons": [{"name": "ruby", "sentiment": "none"}, {"name": "python", "sentiment": "none"}], "locations": [{"name": "arizona", "sentiment": "none"}], "organizations": [{"name": "php", "sentiment": "none"}, {"name": "css", "sentiment": "none"}]}, "highlightText": "", "language": "english", "persons": [], "text": "  I Don’t Speak Your Language: Frontend vs. Backend  //blog.teamtreehouse.com/i-dont-speak-your-language-frontend-vs-backend. Captcha Submit \n“I Don’t Speak Your Language” will give you a quick overview of tech terms in our industry. Knowing these terms will help you in your communications and allow you to build better products more efficiently. \nThere has been a lot of discussion in the blog comments lately about what constitutes design and development when it comes to the web. I’m trying as best as I can to help you, our dear readers, in your journey to becoming the best web professional you possibly can. \nOur goal is to listen to you and create content that is relevant to the discussion and the challenges that you face, so I thought I would take this opportunity to highlight the differences between design and development. My goal here is to lay the foundation for further discussion and see if we can define the lines together. Free trial on Treehouse: Do you want to learn more about back end and front end web development ? Signup for a free trial on Treehouse . \nThe differences between design and development actually lead to more of a discussion around frontend and backend web work. Let’s start with the frontend… Front End \nWhen we discuss the “frontend” of the web, what we’re really talking about is the part of the web that you can see and interact with. The frontend usually consists of two parts: the web design and front end web development . \nIn the past when someone discussed development it usually referred to the backend, but in recent years there has been a real need to differentiate between designers that worked strictly in Photoshop and those that could code HTML and CSS . It went even further when designers crossed the lines to working with JavaScript and jQuery . \nSo now when we discuss the term “web design”, we’re really talking about those that work with Photoshop and Fireworks, and those that code using HTML , CSS , JavaScript or jQuery (it might be important here to state that jQuery is a compiled library of Javascript). \nEverything that you see when using the web is a combination of HTML, CSS, and JavaScript all being controlled by your computer’s browser. These include things like fonts, drop-down menus, buttons, transitions, sliders, contact forms, etc. \nNow to make all of this become a reality and to store the information that you put in the frontend elements, we need technology to make it happen. Enter the backend… Backend \nThe backend usually consists of three parts: a server, an application, and a database. If you book a flight or buy concert tickets, you usually open a website and interact with the frontend. Once you’ve entered that information, the application stores it in a database that was created on a server. For sake of ease, just think about a database as a giant Excel spreadsheet on your computer, but your computer (server) is stored somewhere in Arizona. \nAll of that information stays on the server so when you log back into the application to print your tickets, all of the information is still there in your account. \nWe call a person that builds all of this technology to work together a backend developer . Backend technologies usually consist of languages like PHP , Ruby , Python , etc. To make them even easier to use they’re usually enhanced by frameworks like Ruby on Rails , Cake PHP, and Code Igniter that all make development faster and easier to collaborate on. \nMany web professionals that are just getting into the field may have heard a lot of people talking about WordPress. WordPress is a good example of the frontend and backend working together because WordPress is an open-sourced framework built on PHP that you have to install on your server with a database. Designers then customize the look and functionality of WordPress sites using CSS, jQuery and JavaScript. Conclusion \nI hoped this helped many of you get clear on when people are talking about the frontend and the backend of the web, as well as knowing when they’re talking about design as opposed to development. \nThe lines between design and development seem to get more and more blurred on a daily basis, but fundamentally they are still very separate. \nIn order for everyone to carry on great discussions and to collaborate on great products it’s very important that we’re clear on what part of the product we’re really talking about. \nWhat are your thought on design and development, and the frontend versus the backend? Please join the conversation by commenting below. Cheers! Anyone can be a developer . Earn a Techdegree and get the job-ready skills you need to launch your new career in tech.", "external_links": [], "published": "2017-03-31T07:26:00.000+03:00", "crawled": "2017-03-31T07:10:34.339+03:00", "highlightTitle": ""}