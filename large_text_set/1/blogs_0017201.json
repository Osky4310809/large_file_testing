{"organizations": [], "uuid": "525d2badcc582efb4f28630c7b96c4e4fd098119", "thread": {"social": {"gplus": {"shares": 81}, "pinterest": {"shares": 4}, "vk": {"shares": 0}, "linkedin": {"shares": 62}, "facebook": {"likes": 268, "shares": 268, "comments": 0}, "stumbledupon": {"shares": 0}}, "site_full": "blog.teamtreehouse.com", "main_image": "http://blog.teamtreehouse.com/wp-content/uploads/2014/10/little_androids.jpg", "site_section": "http://blog.teamtreehouse.com/comments/feed", "section_title": "Comments for Treehouse Blog", "url": "http://blog.teamtreehouse.com/employers-looking-junior-android-dev", "country": "US", "domain_rank": 3967, "title": "Comment on What Employers Are Looking for in a Junior Android Dev by Noel lyimo", "performance_score": 2, "site": "teamtreehouse.com", "participants_count": 1, "title_full": "Comment on What Employers Are Looking for in a Junior Android Dev by Noel lyimo", "spam_score": 0.0, "site_type": "blogs", "published": "2017-01-15T23:36:00.000+02:00", "replies_count": 0, "uuid": "525d2badcc582efb4f28630c7b96c4e4fd098119"}, "author": "Noel lyimo", "url": "http://blog.teamtreehouse.com/employers-looking-junior-android-dev", "ord_in_thread": 0, "title": "Comment on What Employers Are Looking for in a Junior Android Dev by Noel lyimo", "locations": [], "entities": {"persons": [{"name": "noel", "sentiment": "negative"}, {"name": "django", "sentiment": "none"}], "locations": [{"name": "u.s.", "sentiment": "none"}], "organizations": [{"name": "treehouse fun facts", "sentiment": "none"}, {"name": "treehouse", "sentiment": "none"}, {"name": "google", "sentiment": "none"}, {"name": "sdk", "sentiment": "none"}]}, "highlightText": "", "language": "english", "persons": [], "text": "  What Employers Are Looking for in a Junior Android Dev  //blog.teamtreehouse.com/employers-looking-junior-android-dev. Captcha Submit \nWe recently wrote a post that discussed what employers are looking for a in Jnr Ruby Dev . It was very popular so we thought we would tackle a different discipline this time – Android development. \nIt is a wonderful time to be an Android developer. The technology is exciting and evolving, new devices are popping up all over the place, and there is a very high demand for developers. With hundreds of millions of users around the world, the possibilities for gainful employment seem endless. \nWorking as an Android developer can be extremely rewarding. It can also be extremely challenging, especially when you are just getting started. We often hear about indie developers who have spun their code into gold, but the reality is that such stories are the exceptions, not the rules. It is hard to be successful (financially or otherwise) when you are are still learning so much. Heck, it is hard to be successful when you already know or do a lot! \nOur mission at Treehouse is to help students gain the skills they need for the careers they want, and to help them get started and then progress in those careers. Getting started in a junior developer role for Android is similar to many other entry-level programming jobs, but let’s talk about exactly what employers are looking for and how you might start down this career path. This takes “Junior Android Developer” too literally. Required-ish Skills \n“Required” is a bad word to use here. Below is a list of generalized requirements based on my experience being a developer and hiring Android developers, as well as researching junior-level positions. You will undoubtedly run into different requirements than these, but this list should be a good starting point! \nThis may seem like a lot, but you can build up these skills faster than you might think. If you are already a student at Treehouse taking the Android courses, then you know how quickly you can learn the basics below. After that it’s just practice to understand it all more fully. If you are not a student, check out our Android track as it is structured to teach you everything you need to know to become a junior-level Android developer. We are continually adding to and updating our library to provide more of these skills and others to further your education throughout your career. Technical Skills 1. Java \nYou should of course be comfortable with the Java programming language. While you can develop Android apps using a number of different technologies, most positions are for native development using Java and Android Studio or Eclipse as your IDE. \nWhat exactly does it mean to be comfortable with Java? You don’t need to know all the latest details of the latest version, but you should have a well-rounded knowledge of the basic syntax and programming structures. You should know things like variables, lists, loops, control structures and object-oriented concepts like class vs. static methods and inheritance. You should also be comfortable using documentation to learn how to use new parts of the Java SDK. A very big part of any position as a developer is continuous learning. Check out our brand new Java Basics course . 2. The Android SDK \nAgain, this goes without saying. But what areas of the SDK should you specifically know? The following list includes many basic Android concepts that you should be familiar with: A basic understanding of layouts and views Activities and their lifecycle Getting data from the web Storing data Collection views (like ListViews) and Adapters (default and custom) Action Bar Accommodating different screen sizes and densities \nAs you will be undoubtedly be expected try new things, you should also be comfortable using the Android documentation and resources like Treehouse to get started with a new part of the SDK. And this probably goes without saying, but you should be competent with using the debugger in your IDE to help troubleshoot bugs in your code. 3. Working with APIs \nAs mentioned above, getting data from the web is a pretty basic skill for app development since so many apps have a network-based component. This may not be required for all jobs, but many postings I’ve seen expect the developer to be able to work with their own API or some other 3rd party API. These will usually be JSON/REST APIs, though XML/SOAP does still pop up! I would recommend focusing on JSON/REST and only learning XML/SOAP if you need to. The basic concepts are still relatively similar; it’s just a different way of requesting and then parsing the data. A few of our courses in the Android track can help you master using APIs. 4. Git \nThis particular skill may not be required, but whether you are working alone or with a team you will generally want to use some sort of version control system. You don’t have to be an expert at managing a bunch of merge conflicts, but you should understand the basics of creating and using a repository and committing and pushing changes. We have a great Git Basics course at Treehouse that I highly recommend. 5. Back-end Skills \nSometimes job posts will ask that the Android developers also contribute on the back-end of their system. I’ve had this experience myself. This may be harder to add to your skill set when you are just starting out as the back-end technologies vary so much (Rails, .NET, Django, NodeJS, etc.), but I wanted to list it as it comes up often enough to warrant discussion. \nDon’t let this discourage you from Android development, though. You can either ignore these posts or use it as motivation to learn or brush up on your back-end skills. And remember, the basic concepts of programming translate well, so sometimes it’s just a matter of getting familiar with the architecture of a system and the syntax of the language. You don’t need to necessarily dive deep into these back-end technologies. Sometimes you just need to be comfortable modifying existing back-end APIs to work with changes to the app you are working on. Non-Technical Skills \nIt is easy to focus on the technical skills of a technical position, but do not forget about the important non-technical skills! I have seen and heard of many candidates who knew enough about Android programming but did not know enough about communicating and collaborating with a team. \nThe list below is again culled from a sample of real job postings for junior-level Android developers. 1. Passion \nArgh…I dread seeing this word in job postings, but it appears pretty often. Employers are often looking for “passionate, motivated” employees, but what does this mean? More importantly, how should you convey this in an interview? \nPassion is such a loaded word. Don’t worry if you don’t know what your “passion” is…most people I know don’t have a great answer for this. Passions change from moment to moment, and we can be slow and steady about our passion just the same as energized and chaotic. \nThe important feeling you want to convey is that you believe in what the employer is doing and you believe in yourself that you will excel at the position. In your interview, show the employer that you are interested in the work by researching the company and asking questions. And sell your own abilities to learn and improve. It’s okay to admit you don’t know things as long as you follow it up by explaining how that has never stopped you and that you are willing and dedicated to learn new things. 2. Collaboration and communication \nCollaboration with a team is vitally important in most developer positions. Even if you are the only developer working on a product, you will need to collaborate with other people in the organization. Sometimes designers, sometimes management, sometimes end users, but always sharing your work with others and inviting feedback and discussion. Communication is key! \nCollaboration and communication are closely related, so by necessity you will need strong communication skills to collaborate successfully. Make sure you can explain what you are working on to both technical and non-technical people and keep practicing written and verbal communication. 3. Writing \nThis goes hand in hand with communication, but it appears on its own often enough in job postings that we should discuss it as a standalone skill. Writing is becoming more and more important in an economy that spans the globe, so make sure you are comfortable communicating via written text. As a developer you may be expected to write things like technical documentation, summaries of your work for non-technical coworkers, user-facing text within the app, and regular communication via chat, email, etc. \nWhile we don’t currently offer any courses at Treehouse that can help you become a better writer, there really are two key things you can do on your own. Read and write. That’s it! Read more and write more and you will exercise those parts of your brain that deal with written text. Other Common Requirements \nThere are a few other general requirements that appear in many job postings. 1. At Least One Published App \nThe quickest way to show an employer that you can do something is to have a real app on Google Play with your name on it. Employers know this and often expect to see apps you have already worked on. It doesn’t have to be anything fancy or wildly successful, but even a simple app published on Google Play demonstrates a baseline of knowledge about the entire app development lifecycle. If you need a simple app to publish, try customizing the Treehouse Fun Facts app and then publish it using our Publish an Android App course . 2. A College Degree \nMany job postings still require a degree, but this is something you can challenge! The tech industry is a leader in hiring people based on what they can do, so if you apply for a job that requires a degree and you don’t have one, show how you have the real experience that is more important than a piece of paper. What can you expect to earn? \nThis is a hard question to answer. As one might expect, this varies widely from job to job, city to city, country to country. Very generally, a full-time junior-level Android developer can expect to make somewhere around $60,000 to $80,000 per year in the U.S. Might want to check that exchange rate! Where can you find Junior Android Developer jobs? \nThere are quite a few sites to look for Android jobs, but the following list is a great place to start:", "external_links": [], "published": "2017-01-15T23:36:00.000+02:00", "crawled": "2017-01-16T01:09:08.394+02:00", "highlightTitle": ""}