{"organizations": [], "uuid": "2cfad9e6801803f72ab26b17fd28ae7b5baab723", "thread": {"social": {"gplus": {"shares": 15}, "pinterest": {"shares": 1}, "vk": {"shares": 1}, "linkedin": {"shares": 47}, "facebook": {"likes": 155, "shares": 155, "comments": 0}, "stumbledupon": {"shares": 0}}, "site_full": "blog.teamtreehouse.com", "main_image": "http://blog.teamtreehouse.com/wp-content/uploads/2015/09/shutterstock_285109721.jpg", "site_section": "http://blog.teamtreehouse.com/comments/feed", "section_title": "Comments for Treehouse Blog", "url": "http://blog.teamtreehouse.com/every-junior-ios-developer-needs-know", "country": "US", "domain_rank": 3967, "title": "Comment on What Every Junior iOS Developer Needs to Know by Dmitry", "performance_score": 1, "site": "teamtreehouse.com", "participants_count": 1, "title_full": "Comment on What Every Junior iOS Developer Needs to Know by Dmitry", "spam_score": 0.0, "site_type": "blogs", "published": "2017-01-18T04:54:00.000+02:00", "replies_count": 0, "uuid": "2cfad9e6801803f72ab26b17fd28ae7b5baab723"}, "author": "Dmitry", "url": "http://blog.teamtreehouse.com/every-junior-ios-developer-needs-know", "ord_in_thread": 0, "title": "Comment on What Every Junior iOS Developer Needs to Know by Dmitry", "locations": [], "entities": {"persons": [], "locations": [], "organizations": [{"name": "core data", "sentiment": "none"}]}, "highlightText": "", "language": "english", "persons": [], "text": "  What Every Junior iOS Developer Needs to Know  //blog.teamtreehouse.com/every-junior-ios-developer-needs-know. Captcha Submit \nDeveloping apps for iOS has been a growing sector for some time. The versatility and ubiquity of the iPhone and iPad gave scores of developers a chance to bring their wild ideas to life and parade them in front of an enormous – and relatively wealthy – captive audience. In the initial gold rush and for some time after, there was real money to be made making technically simple apps which might appeal to niche audiences or just be good for a laugh. Indie developers were trying their hands at all sort of apps and entrepreneurs of all stripes needed coders to bring their next big thing to life. Ah, the salad days. \nAs the competition on the App Store grew fiercer and the initial infatuation with the devices began to fade, more and more of the lucrative iOS development work came from big businesses requiring a mobile presence. The upshot of this for an aspiring iOS developer is that now, your first substantial iOS job will most likely come through a more traditional channel – a recruiter, direct hire at a large firm, digital agency and the like. This no doubt comes with its benefits – a steady paycheck, for starters – though the interview and vetting process may be far more rigorous than just a few years ago. \nThis presents a somewhat unique problem for iOS developers as there is so much breadth to the subject. Since an iPhone can be used for so many different types of things, it’s often hard to know which skills to hone first. Should I learn Core Audio before Core Data? If I want to learn about animation, which of the many options should I choose? No mere mortal can tackle it all, so where to spend one’s limited time? \nIn this article, I hope to outline the menu of priorities a Jr. iOS Developer should focus on, so you can walk confidently into a junior-level job interview. \nNOTE: Before anyone gets up in arms about the placement or omission of items on this list, bear in mind this is for a theoretical job, working on a theoretical project. The actual skills needed could vary wildly . We are knowingly painting with a wide brush, but hopefully will cover all the important areas, not simply the bare minimum . Also, in an effort to be even-handed, I’ve primarily provided links to Apple documentation – you may however find it much easier to learn this material with the guidance of a code school or via countless online tutorials. Treehouse of course does offer robust iOS tracks in both Objective-C and Swift . \nThe Must Haves \nThese are topics you should have hands-on experience with and be comfortable talking about and implementing. That hands-on work needn’t be paid work and you won’t be expected to recite documentation from memory, but you should have at least moderate fluency in the following topics.", "external_links": [], "published": "2017-01-18T04:54:00.000+02:00", "crawled": "2017-01-18T03:55:13.663+02:00", "highlightTitle": ""}