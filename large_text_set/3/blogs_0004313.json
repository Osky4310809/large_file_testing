{"organizations": [], "uuid": "971baba78908b2be3854bde7c03f2ab71827dbcb", "thread": {"social": {"gplus": {"shares": 6}, "pinterest": {"shares": 2}, "vk": {"shares": 0}, "linkedin": {"shares": 39}, "facebook": {"likes": 123, "shares": 123, "comments": 0}, "stumbledupon": {"shares": 0}}, "site_full": "arstechnica.com", "main_image": "https://cdn.arstechnica.net/wp-content/uploads/2017/03/live-unit-tests-760x380.png", "site_section": "http://feeds.arstechnica.com/arstechnica/index/", "section_title": "Ars Technica", "url": "https://arstechnica.com/information-technology/2017/03/20-years-in-the-making-visual-studio-2017-is-faster-leaner-devops-ier/", "country": "US", "domain_rank": 1109, "title": "20 years in the making, Visual Studio 2017 is faster, leaner, devops-ier", "performance_score": 1, "site": "arstechnica.com", "participants_count": 3, "title_full": "20 years in the making, Visual Studio 2017 is faster, leaner, devops-ier | Ars Technica", "spam_score": 0.0, "site_type": "blogs", "published": "2017-03-07T20:00:00.000+02:00", "replies_count": 2, "uuid": "971baba78908b2be3854bde7c03f2ab71827dbcb"}, "author": "Peter Bright", "url": "https://arstechnica.com/information-technology/2017/03/20-years-in-the-making-visual-studio-2017-is-faster-leaner-devops-ier/", "ord_in_thread": 0, "title": "20 years in the making, Visual Studio 2017 is faster, leaner, devops-ier", "locations": [], "entities": {"persons": [{"name": "mac", "sentiment": "none"}, {"name": "redgate", "sentiment": "none"}], "locations": [{"name": "visual studio mobile center", "sentiment": "none"}], "organizations": [{"name": "microsoft", "sentiment": "negative"}, {"name": "visual studio team foundation", "sentiment": "none"}, {"name": "readyroll core", "sentiment": "none"}, {"name": "redgate", "sentiment": "none"}]}, "highlightText": "", "language": "english", "persons": [], "text": "Just over 20 years have passed since Microsoft first shipped Visual Studio, which bundled development environments for C++, Visual Basic, and its Java dialect J++. Since then, the languages have changed—only C++ remains, with Visual Basic replaced by its .NET namesake, J++ killed off in the courts, and C# and F# children of the 21st century—and the integration has improved—it's actually one development environment instead of a different one for each language. Today, Microsoft is releasing the 11th version of Visual Studio: Visual Studio 2017, previously codenamed Visual Studio \"15,\" because its version stamp is 15.0.\nMicrosoft had four main areas of improvement in Visual Studio 2017: \"productivity and performance,\" mobile, cloud, and devops.\nThe first is apparent as soon as you install Visual Studio 2017: the installer is faster and should make installing only the features you need easier. The quickest installation should take no more than about three minutes. Visual Studio itself is also faster, especially when loading large C++ projects. Its startup time should also be less painful than in 2015. As well as opening faster, projects are also not quite as necessary as they were before; Visual Studio 2017 can sort of open a folder as if it were a project. This allows for editing and building of ad hoc directories full of code. This is great when working on codebases that aren't primarily developed in Visual Studio.\nThe editing experience has been improved, with better, filterable IntelliSense, and a reworked \"go to any symbol/file/type\" feature.\nC# and VB.NET developers are getting updated versions of their respective languages along with a compelling \"live unit test\" feature. As you edit the code, the live unit test shows which lines of code are covered by unit tests and whether those tests are passing or failing. Visual Studio 2017 will re-run the tests in the background so that the editor window shows a continuous view of whether your code passes its tests or not. Those developers also now have a \"run to click\" feature that looks roughly equivalent to the C++ \"run to cursor\" feature: It runs the program up to the chosen line and then pauses in the debugger, without needing to set any manual breakpoints.\nC++ developers can enjoy better standards compliance, including some C++17 features, and support for CMake build scripts.\nOn the mobile front, Xamarin integration has been enhanced, with a previewer for Xamarin Forms and better IntelliSense for Xamarin Forms XAML. Plumbing mobile apps into cloud services is also streamlined, as adding a service will now pull in all the necessary dependencies.\nCloud services, and especially Azure integration, remain a development focus for Microsoft. Visual Studio 2017 syncs Visual Studio with .NET Core, supporting versions 1.0 and 1.1 of Microsoft's (somewhat) slimmed down, cross-platform, open-source .NET runtime environment. .NET Core apps can be run and deployed on Linux and macOS, as well as Windows. Both .NET and .NET Core applications can be containerized for deployment using Docker. This support extends to Azure: Creating an app, containerizing it, and then deploying it on Azure is a matter of a few mouse clicks.\nFor devops, Git integration is improved. More Git functionality is exposed directly within the development environment, and Visual Studio now uses the Git executable, rather than GitHub's libgit2 . This means that Visual Studio can better track Git features going forward, and it also picks up some older features, most importantly SSH, that are normally taken for granted by Git users.\nMicrosoft is also trying to bring cleaner development and deployment workflows to databases, through inclusion of third party tools from Redgate. All versions of Visual Studio 2017 will include Redgate's SQL search for searching for SQL across databases. Enterprise users will also get Redgate's ReadyRoll Core, which enables source control management of database versions, and SQL Prompt Core, which provides refactoring and reformatting of SQL code.\nAs well as Visual Studio 2017 itself, Microsoft has more for developers today. A new preview of Visual Studio for Mac adds support for .NET Core, bug fixes, and performance improvements. There's also an update to the preview of Visual Studio Mobile Center, which adds support for building, testing, and distributing Xamarin and React Native apps, adding to the existing support for Objective-C, Java, and Swift.\nFinally, Visual Studio Team Foundation Server 2017 is receiving Update 1, which, among other things, add support for npm packages.", "external_links": [], "published": "2017-03-07T20:00:00.000+02:00", "crawled": "2017-03-07T15:18:24.110+02:00", "highlightTitle": ""}