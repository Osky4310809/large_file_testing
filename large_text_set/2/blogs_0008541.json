{"organizations": [], "uuid": "b4d85f8b9c067afc01829a28c8f852cdd5cdf0a8", "thread": {"social": {"gplus": {"shares": 6}, "pinterest": {"shares": 1}, "vk": {"shares": 0}, "linkedin": {"shares": 3}, "facebook": {"likes": 160, "shares": 160, "comments": 0}, "stumbledupon": {"shares": 0}}, "site_full": "www.xda-developers.com", "main_image": "", "site_section": "https://www.xda-developers.com", "section_title": "xda-developers", "url": "https://www.xda-developers.com/how-to-add-more-steps-to-your-volume-slider-root/", "country": "US", "domain_rank": 544, "title": "How to Add more Steps to your Volume Slider [Root]", "performance_score": 1, "site": "xda-developers.com", "participants_count": 1, "title_full": "How to Add more Steps to your Volume Slider [Root]", "spam_score": 0.0, "site_type": "blogs", "published": "2017-02-12T05:30:00.000+02:00", "replies_count": 0, "uuid": "b4d85f8b9c067afc01829a28c8f852cdd5cdf0a8"}, "author": "Mishaal Rahman", "url": "https://www.xda-developers.com/how-to-add-more-steps-to-your-volume-slider-root/", "ord_in_thread": 0, "title": "How to Add more Steps to your Volume Slider [Root]", "locations": [], "entities": {"persons": [], "locations": [], "organizations": []}, "highlightText": "", "language": "english", "persons": [], "text": "In my quest to discover interesting tweaks to share with the XDA-Developers community, I frequently came across one request across many different forums:\n“How do I add more steps to the volume slider?” – No one in particular While looking up methods to reliably add more volume granularity, I found that most of the applications on the Google Play Store simply do not work for most modern devices. Another solution I’ve found involved the use of the Xposed module VolumeSteps+ , which unfortunately means the method is restricted to rooted devices that support the Xposed Framework (meaning, no Android Nougat support). Finally, the last method that many of you are well aware of is to flash a custom ROM, but for those of us that don’t have many options in that regard (the Huawei Mate 9 is lacking in development love at the moment) or want to remain with a stock rooted build, that option is difficult to stomach.\nFortunately, there’s a simple way to add more steps to your call or media volume that doesn’t require the Xposed Framework and works on Android 6.0+ as well. Best of all, you can stay on your stock rooted setup if you want! All you need to do is take advantage of a simple, yet totally unpublicized build.prop tweak. \nNote: the device I tested this on are two Google Nexus 6 phones running Android 6.0 Marshmallow and 7.1 Nougat. I have no way of testing this tweak on every device with every software variation. This tweak is derived from looking at AOSP, but without testing other devices or looking at their source I can’t say exactly which devices it will work on. \nGranular Volume Control with a Build.Prop Tweak Android’s open source documentation lays out exactly how the software’s audio service is implemented in AudioService.java . Within the code, there is a certain section that defines how the volume levels are initialized on boot.\n// Initialize volume int maxVolume = SystemProperties.getInt(\" ro.config.vc_call_vol_steps \", MAX_STREAM_VOLUME[AudioSystem.STREAM_VOICE_CALL]); if (maxVolume != MAX_STREAM_VOLUME[AudioSystem.STREAM_VOICE_CALL]) { MAX_STREAM_VOLUME[AudioSystem.STREAM_VOICE_CALL] = maxVolume; AudioSystem.DEFAULT_STREAM_VOLUME[AudioSystem.STREAM_VOICE_CALL] = (maxVolume * 3) / 4; } maxVolume = SystemProperties.getInt(\" ro.config.media_vol_steps \", MAX_STREAM_VOLUME[AudioSystem.STREAM_MUSIC]); if (maxVolume != MAX_STREAM_VOLUME[AudioSystem.STREAM_MUSIC]) { MAX_STREAM_VOLUME[AudioSystem.STREAM_MUSIC] = maxVolume; AudioSystem.DEFAULT_STREAM_VOLUME[AudioSystem.STREAM_MUSIC] = (maxVolume * 3) / 4; } \nThe two terms that I bolded above look awfully similar to lines in the build.prop file located in /system, don’t they? That’s because they are, though by default you won’t see these properties within the build.prop file. Luckily, if you define these properties yourself, you can manually set the number of volume steps .\nIf you are familiar with how to edit and add lines to your build.prop, then go ahead and get cracking! If not, here’s a simple method to get you started.\nDownload BuildProp Editor by JRummy on the Google Play Store and open it up. Tap on the “pencil” icon in the top right to bring up the manual editing mode. Scroll all the way to the bottom and add either of the build.prop lines mentioned above and set it equal to the number of volume steps you want to have. For example, entering these two commands at the end will double the number of in-call volume steps and media volume steps respectively.\nro.config.vc_call_vol_steps=14\nro.config.media_vol_steps=30 \nOnce you’ve entered these commands, reboot your phone. If it worked, you should now have as many volume steps as you specified in build.prop.\nEnjoy this nifty tweak! Let us know in the comments below if it worked for your device and build version. \n", "external_links": [], "published": "2017-02-12T05:30:00.000+02:00", "crawled": "2017-02-12T00:57:06.570+02:00", "highlightTitle": ""}